// <auto-generated />
using System;
using Index.Presistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Index.Presistence.Migrations
{
    [DbContext(typeof(IndexDbContext))]
    [Migration("20240504101649_RemovedSubjectIdFromSubjectEntity")]
    partial class RemovedSubjectIdFromSubjectEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Index.Domain.Entities.SubjectModule.ReportCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 5, 4, 12, 16, 49, 306, DateTimeKind.Local).AddTicks(1599));

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.ToTable("ReportCard", "sub");
                });

            modelBuilder.Entity("Index.Domain.Entities.SubjectModule.ReportCardSubject", b =>
                {
                    b.Property<int>("ReportCardId")
                        .HasColumnType("int");

                    b.Property<string>("SubjectCode")
                        .HasColumnType("nvarchar(8)");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.HasKey("ReportCardId", "SubjectCode");

                    b.HasIndex("SubjectCode");

                    b.ToTable("ReportCardSubject", "sub");
                });

            modelBuilder.Entity("Index.Domain.Entities.SubjectModule.Subject", b =>
                {
                    b.Property<string>("SubjectCode")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<double>("Credit")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubjectCode");

                    b.ToTable("Subject", "sub");

                    b.HasData(
                        new
                        {
                            SubjectCode = "EXPH0300",
                            Credit = 7.5,
                            Name = "Examen philosophicum for Science and Technology"
                        },
                        new
                        {
                            SubjectCode = "HMS0002",
                            Credit = 0.0,
                            Name = "Health, Safety and Environment (HSE) course for 1st year students"
                        },
                        new
                        {
                            SubjectCode = "IT2805",
                            Credit = 7.5,
                            Name = "Web Technologies"
                        },
                        new
                        {
                            SubjectCode = "TBA4231",
                            Credit = 7.5,
                            Name = "Applied Geomatics"
                        },
                        new
                        {
                            SubjectCode = "TBA4236",
                            Credit = 7.5,
                            Name = "Theoretical Geomatics"
                        },
                        new
                        {
                            SubjectCode = "TBA4240",
                            Credit = 7.5,
                            Name = "Geographic Information Handling 1, Basic Course"
                        },
                        new
                        {
                            SubjectCode = "TBA4250",
                            Credit = 7.5,
                            Name = "Geographic Information Handling 2, Basic Course"
                        },
                        new
                        {
                            SubjectCode = "TBA4251",
                            Credit = 7.5,
                            Name = "Programming in Geomatics"
                        },
                        new
                        {
                            SubjectCode = "TBA4256",
                            Credit = 7.5,
                            Name = "3D Digital Modelling"
                        },
                        new
                        {
                            SubjectCode = "TFY4115",
                            Credit = 7.5,
                            Name = "Physics"
                        },
                        new
                        {
                            SubjectCode = "TEP4100",
                            Credit = 7.5,
                            Name = "Fluid Mechanics"
                        },
                        new
                        {
                            SubjectCode = "TEP4225",
                            Credit = 7.5,
                            Name = "Energy and Environment"
                        },
                        new
                        {
                            SubjectCode = "TDT4100",
                            Credit = 7.5,
                            Name = "Object-Oriented Programming"
                        },
                        new
                        {
                            SubjectCode = "TDT4110",
                            Credit = 7.5,
                            Name = "Information Technology, Introduction"
                        },
                        new
                        {
                            SubjectCode = "TDT4120",
                            Credit = 7.5,
                            Name = "Algorithms and Data Structures"
                        },
                        new
                        {
                            SubjectCode = "TDT4140",
                            Credit = 7.5,
                            Name = "Software Engineering"
                        },
                        new
                        {
                            SubjectCode = "TDT4145",
                            Credit = 7.5,
                            Name = "Data Modelling, Databases, and Database Management Systems"
                        },
                        new
                        {
                            SubjectCode = "TDT4173",
                            Credit = 7.5,
                            Name = "Machine Learning"
                        },
                        new
                        {
                            SubjectCode = "TKT4116",
                            Credit = 7.5,
                            Name = "Mechanics 1"
                        },
                        new
                        {
                            SubjectCode = "TKT4122",
                            Credit = 7.5,
                            Name = "Mechanics 2"
                        },
                        new
                        {
                            SubjectCode = "TMA4100",
                            Credit = 7.5,
                            Name = "Calculus 1"
                        },
                        new
                        {
                            SubjectCode = "TMA4105",
                            Credit = 7.5,
                            Name = "Calculus 2"
                        },
                        new
                        {
                            SubjectCode = "TMA4115",
                            Credit = 7.5,
                            Name = "Mathematics 3 - Linear Algebra"
                        },
                        new
                        {
                            SubjectCode = "TMA4130",
                            Credit = 7.5,
                            Name = "Mathematics 4N - Differential Equations and Fourier Analysis"
                        },
                        new
                        {
                            SubjectCode = "TMA4140",
                            Credit = 7.5,
                            Name = "Discrete Mathematics"
                        });
                });

            modelBuilder.Entity("Index.Domain.Entities.UserModule.UserProfile", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("Index.Domain.Entities.SubjectModule.ReportCard", b =>
                {
                    b.HasOne("Index.Domain.Entities.UserModule.UserProfile", "UserProfile")
                        .WithMany("ReportCards")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Index.Domain.Entities.SubjectModule.ReportCardSubject", b =>
                {
                    b.HasOne("Index.Domain.Entities.SubjectModule.ReportCard", "ReportCard")
                        .WithMany("ReportCardSubjects")
                        .HasForeignKey("ReportCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Index.Domain.Entities.SubjectModule.Subject", "Subject")
                        .WithMany("ReportCardSubjects")
                        .HasForeignKey("SubjectCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportCard");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Index.Domain.Entities.SubjectModule.ReportCard", b =>
                {
                    b.Navigation("ReportCardSubjects");
                });

            modelBuilder.Entity("Index.Domain.Entities.SubjectModule.Subject", b =>
                {
                    b.Navigation("ReportCardSubjects");
                });

            modelBuilder.Entity("Index.Domain.Entities.UserModule.UserProfile", b =>
                {
                    b.Navigation("ReportCards");
                });
#pragma warning restore 612, 618
        }
    }
}
