// <auto-generated />
using System;
using Index.Presistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Index.Presistence.Migrations
{
    [DbContext(typeof(IndexDbContext))]
    partial class IndexDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Index.Domain.Entities.SubjectModule.ReportCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 4, 28, 21, 29, 20, 340, DateTimeKind.Local).AddTicks(9814));

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.ToTable("ReportCard", "sub");
                });

            modelBuilder.Entity("Index.Domain.Entities.SubjectModule.ReportCardSubject", b =>
                {
                    b.Property<int>("ReportCardId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.HasKey("ReportCardId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("ReportCardSubject", "sub");
                });

            modelBuilder.Entity("Index.Domain.Entities.SubjectModule.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Credit")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.ToTable("Subject", "sub");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Credit = 7.5,
                            Name = "Examen philosophicum for Science and Technology",
                            SubjectCode = "EXPH0300"
                        },
                        new
                        {
                            Id = 25,
                            Credit = 0.0,
                            Name = "Health, Safety and Environment (HSE) course for 1st year students",
                            SubjectCode = "HMS0002"
                        },
                        new
                        {
                            Id = 2,
                            Credit = 7.5,
                            Name = "Web Technologies",
                            SubjectCode = "IT2805"
                        },
                        new
                        {
                            Id = 3,
                            Credit = 7.5,
                            Name = "Applied Geomatics",
                            SubjectCode = "TBA4231"
                        },
                        new
                        {
                            Id = 4,
                            Credit = 7.5,
                            Name = "Theoretical Geomatics",
                            SubjectCode = "TBA4236"
                        },
                        new
                        {
                            Id = 5,
                            Credit = 7.5,
                            Name = "Geographic Information Handling 1, Basic Course",
                            SubjectCode = "TBA4240"
                        },
                        new
                        {
                            Id = 6,
                            Credit = 7.5,
                            Name = "Geographic Information Handling 2, Basic Course",
                            SubjectCode = "TBA4250"
                        },
                        new
                        {
                            Id = 7,
                            Credit = 7.5,
                            Name = "Programming in Geomatics",
                            SubjectCode = "TBA4251"
                        },
                        new
                        {
                            Id = 8,
                            Credit = 7.5,
                            Name = "3D Digital Modelling",
                            SubjectCode = "TBA4256"
                        },
                        new
                        {
                            Id = 9,
                            Credit = 7.5,
                            Name = "Physics",
                            SubjectCode = "TFY4115"
                        },
                        new
                        {
                            Id = 10,
                            Credit = 7.5,
                            Name = "Fluid Mechanics",
                            SubjectCode = "TEP4100"
                        },
                        new
                        {
                            Id = 11,
                            Credit = 7.5,
                            Name = "Energy and Environment",
                            SubjectCode = "TEP4225"
                        },
                        new
                        {
                            Id = 12,
                            Credit = 7.5,
                            Name = "Object-Oriented Programming",
                            SubjectCode = "TDT4100"
                        },
                        new
                        {
                            Id = 13,
                            Credit = 7.5,
                            Name = "Information Technology, Introduction",
                            SubjectCode = "TDT4110"
                        },
                        new
                        {
                            Id = 14,
                            Credit = 7.5,
                            Name = "Algorithms and Data Structures",
                            SubjectCode = "TDT4120"
                        },
                        new
                        {
                            Id = 15,
                            Credit = 7.5,
                            Name = "Software Engineering",
                            SubjectCode = "TDT4140"
                        },
                        new
                        {
                            Id = 16,
                            Credit = 7.5,
                            Name = "Data Modelling, Databases, and Database Management Systems",
                            SubjectCode = "TDT4145"
                        },
                        new
                        {
                            Id = 17,
                            Credit = 7.5,
                            Name = "Machine Learning",
                            SubjectCode = "TDT4173"
                        },
                        new
                        {
                            Id = 18,
                            Credit = 7.5,
                            Name = "Mechanics 1",
                            SubjectCode = "TKT4116"
                        },
                        new
                        {
                            Id = 19,
                            Credit = 7.5,
                            Name = "Mechanics 2",
                            SubjectCode = "TKT4122"
                        },
                        new
                        {
                            Id = 20,
                            Credit = 7.5,
                            Name = "Calculus 1",
                            SubjectCode = "TMA4100"
                        },
                        new
                        {
                            Id = 21,
                            Credit = 7.5,
                            Name = "Calculus 2",
                            SubjectCode = "TMA4105"
                        },
                        new
                        {
                            Id = 22,
                            Credit = 7.5,
                            Name = "Mathematics 3 - Linear Algebra",
                            SubjectCode = "TMA4115"
                        },
                        new
                        {
                            Id = 23,
                            Credit = 7.5,
                            Name = "Mathematics 4N - Differential Equations and Fourier Analysis",
                            SubjectCode = "TMA4130"
                        },
                        new
                        {
                            Id = 24,
                            Credit = 7.5,
                            Name = "Discrete Mathematics",
                            SubjectCode = "TMA4140"
                        });
                });

            modelBuilder.Entity("Index.Domain.Entities.UserModule.UserProfile", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("Index.Domain.Entities.SubjectModule.ReportCard", b =>
                {
                    b.HasOne("Index.Domain.Entities.UserModule.UserProfile", "UserProfile")
                        .WithMany("ReportCards")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Index.Domain.Entities.SubjectModule.ReportCardSubject", b =>
                {
                    b.HasOne("Index.Domain.Entities.SubjectModule.ReportCard", "ReportCard")
                        .WithMany("ReportCardSubjects")
                        .HasForeignKey("ReportCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Index.Domain.Entities.SubjectModule.Subject", "Subject")
                        .WithMany("ReportCardSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportCard");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Index.Domain.Entities.SubjectModule.ReportCard", b =>
                {
                    b.Navigation("ReportCardSubjects");
                });

            modelBuilder.Entity("Index.Domain.Entities.SubjectModule.Subject", b =>
                {
                    b.Navigation("ReportCardSubjects");
                });

            modelBuilder.Entity("Index.Domain.Entities.UserModule.UserProfile", b =>
                {
                    b.Navigation("ReportCards");
                });
#pragma warning restore 612, 618
        }
    }
}
